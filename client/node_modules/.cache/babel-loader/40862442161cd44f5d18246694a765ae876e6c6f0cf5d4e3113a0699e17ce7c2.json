{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiak\\\\OneDrive\\\\Documents\\\\blog-project (1)[1]\\\\blog-project (1)\\\\blog-project\\\\client\\\\src\\\\components\\\\Public\\\\BlogPost.js\",\n  _s = $RefreshSig$();\n// client/src/components/Public/BlogPost.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { getPostBySlug } from '../../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlogPost = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchPost();\n  }, [slug]);\n  const fetchPost = async () => {\n    try {\n      const response = await getPostBySlug(slug);\n      setPost(response.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404) {\n        setError('Post not found');\n      } else {\n        setError('Failed to fetch post');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading post...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"Post not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [post.title, \" - My Blog\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:type\",\n        content: \"article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"article:published_time\",\n        content: post.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"article:modified_time\",\n        content: post.updatedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"blog-post card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-meta\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Published on \", new Date(post.createdAt).toLocaleDateString(), post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2022 Updated on \", new Date(post.updatedAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-content\",\n          dangerouslySetInnerHTML: {\n            __html: post.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BlogPost, \"GOJ+e72xY1o3bsZ3woPZ18VB3xo=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Helmet","getPostBySlug","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogPost","_s","slug","post","setPost","loading","setLoading","error","setError","fetchPost","response","data","err","_err$response","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","name","content","property","createdAt","updatedAt","Date","toLocaleDateString","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/saiak/OneDrive/Documents/blog-project (1)[1]/blog-project (1)/blog-project/client/src/components/Public/BlogPost.js"],"sourcesContent":["// client/src/components/Public/BlogPost.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { getPostBySlug } from '../../services/api';\r\n\r\nconst BlogPost = () => {\r\n  const { slug } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, [slug]);\r\n\r\n  const fetchPost = async () => {\r\n    try {\r\n      const response = await getPostBySlug(slug);\r\n      setPost(response.data);\r\n    } catch (err) {\r\n      if (err.response?.status === 404) {\r\n        setError('Post not found');\r\n      } else {\r\n        setError('Failed to fetch post');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading post...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!post) return <div className=\"error\">Post not found</div>;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{post.title} - My Blog</title>\r\n        <meta name=\"description\" content={post.title} />\r\n        <meta property=\"og:title\" content={post.title} />\r\n        <meta property=\"og:description\" content={post.title} />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"article:published_time\" content={post.createdAt} />\r\n        <meta property=\"article:modified_time\" content={post.updatedAt} />\r\n      </Helmet>\r\n      \r\n      <div className=\"container\">\r\n        <article className=\"blog-post card\">\r\n          <h1>{post.title}</h1>\r\n          <div className=\"blog-meta\">\r\n            <p>\r\n              Published on {new Date(post.createdAt).toLocaleDateString()}\r\n              {post.updatedAt !== post.createdAt && (\r\n                <span> â€¢ Updated on {new Date(post.updatedAt).toLocaleDateString()}</span>\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div \r\n            className=\"blog-content\"\r\n            dangerouslySetInnerHTML={{ __html: post.content }}\r\n          />\r\n        </article>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPost;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,aAAa,CAACO,IAAI,CAAC;MAC1CE,OAAO,CAACM,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZ,IAAI,EAAAA,aAAA,GAAAD,GAAG,CAACF,QAAQ,cAAAG,aAAA,uBAAZA,aAAA,CAAcC,MAAM,MAAK,GAAG,EAAE;QAChCN,QAAQ,CAAC,gBAAgB,CAAC;MAC5B,CAAC,MAAM;QACLA,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE,oBAAOR,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClE,IAAIb,KAAK,EAAE,oBAAOV,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAET;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACtD,IAAI,CAACjB,IAAI,EAAE,oBAAON,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7D,oBACEvB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACH,MAAM;MAAAsB,QAAA,gBACLnB,OAAA;QAAAmB,QAAA,GAAQb,IAAI,CAACkB,KAAK,EAAC,YAAU;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCvB,OAAA;QAAMyB,IAAI,EAAC,aAAa;QAACC,OAAO,EAAEpB,IAAI,CAACkB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDvB,OAAA;QAAM2B,QAAQ,EAAC,UAAU;QAACD,OAAO,EAAEpB,IAAI,CAACkB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDvB,OAAA;QAAM2B,QAAQ,EAAC,gBAAgB;QAACD,OAAO,EAAEpB,IAAI,CAACkB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDvB,OAAA;QAAM2B,QAAQ,EAAC,SAAS;QAACD,OAAO,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CvB,OAAA;QAAM2B,QAAQ,EAAC,wBAAwB;QAACD,OAAO,EAAEpB,IAAI,CAACsB;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEvB,OAAA;QAAM2B,QAAQ,EAAC,uBAAuB;QAACD,OAAO,EAAEpB,IAAI,CAACuB;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eAETvB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBnB,OAAA;QAASkB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACjCnB,OAAA;UAAAmB,QAAA,EAAKb,IAAI,CAACkB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBvB,OAAA;UAAKkB,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBnB,OAAA;YAAAmB,QAAA,GAAG,eACY,EAAC,IAAIW,IAAI,CAACxB,IAAI,CAACsB,SAAS,CAAC,CAACG,kBAAkB,CAAC,CAAC,EAC1DzB,IAAI,CAACuB,SAAS,KAAKvB,IAAI,CAACsB,SAAS,iBAChC5B,OAAA;cAAAmB,QAAA,GAAM,qBAAc,EAAC,IAAIW,IAAI,CAACxB,IAAI,CAACuB,SAAS,CAAC,CAACE,kBAAkB,CAAC,CAAC;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAC1E;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNvB,OAAA;UACEkB,SAAS,EAAC,cAAc;UACxBc,uBAAuB,EAAE;YAAEC,MAAM,EAAE3B,IAAI,CAACoB;UAAQ;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACnB,EAAA,CA5DID,QAAQ;EAAA,QACKP,SAAS;AAAA;AAAAsC,EAAA,GADtB/B,QAAQ;AA8Dd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}